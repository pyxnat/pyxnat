dist: xenial
env:
  DOCKER_COMPOSE_VERSION: 1.8.0

before_install:
  # update is required to update the repositories to see the new packages for
  # Docker.
  - sudo apt-get update

  # Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-ce

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
  - docker-compose --version

  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version

language: python
python:
    - "2.7"
    - "3.6"
    - "3.7"
install:
    - "pip install -r requirements.txt"
    - "pip install -r requirements-dev.txt"
    - "pip install ."
script:
    - git clone https://github.com/NrgXnat/xnat-docker-compose
    - cd xnat-docker-compose
    - sudo docker-compose up -d &> /tmp/docker.log
    - sleep 120
    - sudo docker-compose logs --tail=20 xnat-web
    - "cd -"
    - python pyxnat/tests/setup_xnat.py
    - "nosetests pyxnat/tests --nologcapture --with-coverage --cover-inclusive --cover-erase --cover-package ."
    - "coverage report -m"
